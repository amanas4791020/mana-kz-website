import { useState } from 'react'
import { Upload, X, Calendar, Phone, User, MessageSquare, Camera, Clock } from 'lucide-react'

interface FormData {
  name: string
  phone: string
  service: string
  description: string
  preferredDate: Date | null
  preferredTime: string
  address: string
  urgency: string
}

interface EnhancedRequestFormProps {
  initialService?: string
  onSubmit?: (formData: FormData, photos: File[]) => void
}

export function EnhancedRequestForm({ initialService = '', onSubmit }: EnhancedRequestFormProps) {
  const [formData, setFormData] = useState<FormData>({
    name: '',
    phone: '',
    service: initialService,
    description: '',
    preferredDate: null,
    preferredTime: '',
    address: '',
    urgency: 'normal'
  })
  
  const [photos, setPhotos] = useState<File[]>([])
  const [currentStep, setCurrentStep] = useState(1)
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [errors, setErrors] = useState<{ [key: string]: string }>({})
  
  const serviceOptions = [
    { value: 'plumbing', label: '–°–∞–Ω—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã' },
    { value: 'electrical', label: '–≠–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã' },
    { value: 'furniture', label: '–°–±–æ—Ä–∫–∞ –º–µ–±–µ–ª–∏' },
    { value: 'appliances', label: '–†–µ–º–æ–Ω—Ç –±—ã—Ç–æ–≤–æ–π —Ç–µ—Ö–Ω–∏–∫–∏' },
    { value: 'minor_repair', label: '–ú–µ–ª–∫–∏–π —Ä–µ–º–æ–Ω—Ç' },
    { value: 'other', label: '–î—Ä—É–≥–æ–µ' }
  ]
  
  const urgencyOptions = [
    { value: 'normal', label: '–û–±—ã—á–Ω–∞—è (–≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è)', multiplier: 1.0 },
    { value: 'urgent', label: '–°—Ä–æ—á–Ω–∞—è (–≤ —Ç–µ—á–µ–Ω–∏–µ 2-4 —á–∞—Å–æ–≤)', multiplier: 1.3 },
    { value: 'emergency', label: '–ê–≤–∞—Ä–∏–π–Ω–∞—è (–≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞)', multiplier: 1.5 }
  ]
  
  const timeSlots = [
    '8:00 - 10:00',
    '10:00 - 12:00', 
    '12:00 - 14:00',
    '14:00 - 16:00',
    '16:00 - 18:00',
    '18:00 - 20:00',
    '20:00 - 22:00'
  ]

  const handleInputChange = (field: keyof FormData, value: any) => {
    setFormData(prev => ({ ...prev, [field]: value }))
    // –£–¥–∞–ª—è–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—è
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }))
    }
  }

  const handlePhotoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const files = Array.from(e.target.files || [])
    const validFiles = files.filter(file => {
      return file.type.startsWith('image/') && file.size < 10 * 1024 * 1024 // 10MB
    })
    
    if (validFiles.length + photos.length > 5) {
      setErrors(prev => ({ ...prev, photos: '–ú–∞–∫—Å–∏–º—É–º 5 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π' }))
      return
    }
    
    setPhotos(prev => [...prev, ...validFiles])
    setErrors(prev => ({ ...prev, photos: '' }))
  }

  const removePhoto = (index: number) => {
    setPhotos(prev => prev.filter((_, i) => i !== index))
  }

  const validateStep = (step: number): boolean => {
    const newErrors: { [key: string]: string } = {}
    
    if (step === 1) {
      if (!formData.name.trim()) newErrors.name = '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è'
      if (!formData.phone.trim()) newErrors.phone = '–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
      if (!formData.service) newErrors.service = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏'
    }
    
    if (step === 2) {
      if (!formData.description.trim()) newErrors.description = '–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É'
      if (!formData.address.trim()) newErrors.address = '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å'
    }
    
    setErrors(newErrors)
    return Object.keys(newErrors).length === 0
  }

  const handleNextStep = () => {
    if (validateStep(currentStep)) {
      setCurrentStep(prev => prev + 1)
    }
  }

  const handlePrevStep = () => {
    setCurrentStep(prev => prev - 1)
  }

  const handleSubmit = async () => {
    if (!validateStep(2)) return
    
    setIsSubmitting(true)
    
    try {
      if (onSubmit) {
        await onSubmit(formData, photos)
      }
      
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      alert('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.')
      
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setFormData({
        name: '',
        phone: '',
        service: '',
        description: '',
        preferredDate: null,
        preferredTime: '',
        address: '',
        urgency: 'normal'
      })
      setPhotos([])
      setCurrentStep(1)
    } catch (error) {
      alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
    } finally {
      setIsSubmitting(false)
    }
  }

  const generateWhatsAppMessage = () => {
    const service = serviceOptions.find(s => s.value === formData.service)?.label || formData.service
    const urgency = urgencyOptions.find(u => u.value === formData.urgency)?.label || '–û–±—ã—á–Ω–∞—è'
    const date = formData.preferredDate ? formData.preferredDate.toLocaleDateString('ru-RU') : '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'
    
    return `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É:

` +
           `üë§ –ò–º—è: ${formData.name}
` +
           `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
` +
           `üîß –£—Å–ª—É–≥–∞: ${service}
` +
           `üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${formData.description}
` +
           `üìç –ê–¥—Ä–µ—Å: ${formData.address}
` +
           `üìÖ –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: ${date}
` +
           `‚è∞ –í—Ä–µ–º—è: ${formData.preferredTime || '–ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ'}
` +
           `üö® –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${urgency}`
  }

  return (
    <div className="bg-white rounded-xl shadow-lg max-w-2xl mx-auto">
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className="px-6 pt-6">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-4">
            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
              currentStep >= 1 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-500'
            }`}>
              1
            </div>
            <div className={`h-1 w-16 ${
              currentStep > 1 ? 'bg-blue-600' : 'bg-gray-200'
            }`}></div>
            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
              currentStep >= 2 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-500'
            }`}>
              2
            </div>
            <div className={`h-1 w-16 ${
              currentStep > 2 ? 'bg-blue-600' : 'bg-gray-200'
            }`}></div>
            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
              currentStep >= 3 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-500'
            }`}>
              3
            </div>
          </div>
        </div>
      </div>

      <div className="p-6">
        {/* –®–∞–≥ 1: –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {currentStep === 1 && (
          <div className="space-y-4">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <User className="w-4 h-4 inline mr-1" />
                –í–∞—à–µ –∏–º—è
              </label>
              <input
                type="text"
                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
                  errors.name ? 'border-red-500' : 'border-gray-300'
                }`}
                value={formData.name}
                onChange={(e) => handleInputChange('name', e.target.value)}
                placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
              />
              {errors.name && <p className="text-red-500 text-sm mt-1">{errors.name}</p>}
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <Phone className="w-4 h-4 inline mr-1" />
                –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
              </label>
              <input
                type="tel"
                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
                  errors.phone ? 'border-red-500' : 'border-gray-300'
                }`}
                value={formData.phone}
                onChange={(e) => handleInputChange('phone', e.target.value)}
                placeholder="+7 (___)  ___-__-__"
              />
              {errors.phone && <p className="text-red-500 text-sm mt-1">{errors.phone}</p>}
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –¢–∏–ø —É—Å–ª—É–≥–∏
              </label>
              <select
                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
                  errors.service ? 'border-red-500' : 'border-gray-300'
                }`}
                value={formData.service}
                onChange={(e) => handleInputChange('service', e.target.value)}
              >
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏</option>
                {serviceOptions.map(option => (
                  <option key={option.value} value={option.value}>{option.label}</option>
                ))}
              </select>
              {errors.service && <p className="text-red-500 text-sm mt-1">{errors.service}</p>}
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <Clock className="w-4 h-4 inline mr-1" />
                –°—Ä–æ—á–Ω–æ—Å—Ç—å
              </label>
              <div className="space-y-2">
                {urgencyOptions.map(option => (
                  <label key={option.value} className="flex items-center">
                    <input
                      type="radio"
                      name="urgency"
                      value={option.value}
                      checked={formData.urgency === option.value}
                      onChange={(e) => handleInputChange('urgency', e.target.value)}
                      className="mr-2"
                    />
                    <span className="text-sm">{option.label}</span>
                  </label>
                ))}
              </div>
            </div>
          </div>
        )}

        {/* –®–∞–≥ 2: –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ */}
        {currentStep === 2 && (
          <div className="space-y-4">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h2>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <MessageSquare className="w-4 h-4 inline mr-1" />
                –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
              </label>
              <textarea
                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 h-24 ${
                  errors.description ? 'border-red-500' : 'border-gray-300'
                }`}
                value={formData.description}
                onChange={(e) => handleInputChange('description', e.target.value)}
                placeholder="–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏–ª–∏ –∫–∞–∫–∞—è –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞..."
              />
              {errors.description && <p className="text-red-500 text-sm mt-1">{errors.description}</p>}
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ê–¥—Ä–µ—Å
              </label>
              <input
                type="text"
                className={`w-full p-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${
                  errors.address ? 'border-red-500' : 'border-gray-300'
                }`}
                value={formData.address}
                onChange={(e) => handleInputChange('address', e.target.value)}
                placeholder="–£–∫–∞–∂–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –¥–ª—è –≤—ã–µ–∑–¥–∞ –º–∞—Å—Ç–µ—Ä–∞"
              />
              {errors.address && <p className="text-red-500 text-sm mt-1">{errors.address}</p>}
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  <Calendar className="w-4 h-4 inline mr-1" />
                  –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞
                </label>
                <input
                  type="date"
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  value={formData.preferredDate ? formData.preferredDate.toISOString().split('T')[0] : ''}
                  onChange={(e) => handleInputChange('preferredDate', e.target.value ? new Date(e.target.value) : null)}
                  min={new Date().toISOString().split('T')[0]}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è
                </label>
                <select
                  className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  value={formData.preferredTime}
                  onChange={(e) => handleInputChange('preferredTime', e.target.value)}
                >
                  <option value="">–õ—é–±–æ–µ –≤—Ä–µ–º—è</option>
                  {timeSlots.map(slot => (
                    <option key={slot} value={slot}>{slot}</option>
                  ))}
                </select>
              </div>
            </div>

            {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <Camera className="w-4 h-4 inline mr-1" />
                –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
              </label>
              <div className="border-2 border-dashed border-gray-300 rounded-lg p-6">
                <div className="text-center">
                  <Upload className="mx-auto h-12 w-12 text-gray-400" />
                  <div className="mt-4">
                    <label className="cursor-pointer">
                      <span className="mt-2 block text-sm font-medium text-gray-900">
                        –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
                      </span>
                      <input
                        type="file"
                        className="hidden"
                        multiple
                        accept="image/*"
                        onChange={handlePhotoUpload}
                      />
                    </label>
                    <p className="mt-1 text-sm text-gray-500">
                      PNG, JPG –¥–æ 10MB (–º–∞–∫—Å–∏–º—É–º 5 —Ñ–æ—Ç–æ)
                    </p>
                  </div>
                </div>
              </div>
              {errors.photos && <p className="text-red-500 text-sm mt-1">{errors.photos}</p>}
              
              {/* –ü—Ä–µ–≤—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ */}
              {photos.length > 0 && (
                <div className="mt-4 grid grid-cols-3 gap-2">
                  {photos.map((photo, index) => (
                    <div key={index} className="relative">
                      <img
                        src={URL.createObjectURL(photo)}
                        alt={`–§–æ—Ç–æ ${index + 1}`}
                        className="w-full h-20 object-cover rounded border"
                      />
                      <button
                        type="button"
                        onClick={() => removePhoto(index)}
                        className="absolute -top-2 -right-2 bg-red-500 text-white rounded-full p-1 hover:bg-red-600"
                      >
                        <X className="w-3 h-3" />
                      </button>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        )}

        {/* –®–∞–≥ 3: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ */}
        {currentStep === 3 && (
          <div className="space-y-6">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
            
            <div className="bg-gray-50 rounded-lg p-6">
              <h3 className="font-semibold text-lg mb-4">–î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞:</h3>
              
              <div className="space-y-3 text-sm">
                <div><span className="font-medium">–ò–º—è:</span> {formData.name}</div>
                <div><span className="font-medium">–¢–µ–ª–µ—Ñ–æ–Ω:</span> {formData.phone}</div>
                <div><span className="font-medium">–£—Å–ª—É–≥–∞:</span> {serviceOptions.find(s => s.value === formData.service)?.label}</div>
                <div><span className="font-medium">–û–ø–∏—Å–∞–Ω–∏–µ:</span> {formData.description}</div>
                <div><span className="font-medium">–ê–¥—Ä–µ—Å:</span> {formData.address}</div>
                <div><span className="font-medium">–î–∞—Ç–∞:</span> {formData.preferredDate?.toLocaleDateString('ru-RU') || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                <div><span className="font-medium">–í—Ä–µ–º—è:</span> {formData.preferredTime || '–ª—é–±–æ–µ'}</div>
                <div><span className="font-medium">–°—Ä–æ—á–Ω–æ—Å—Ç—å:</span> {urgencyOptions.find(u => u.value === formData.urgency)?.label}</div>
                {photos.length > 0 && <div><span className="font-medium">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:</span> {photos.length}</div>}
              </div>
            </div>

            <div className="flex space-x-4">
              <button
                onClick={handleSubmit}
                disabled={isSubmitting}
                className="flex-1 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white px-6 py-3 rounded-lg font-medium transition-colors"
              >
                {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑'}
              </button>
              
              <a
                href={`https://wa.me/77771234567?text=${encodeURIComponent(generateWhatsAppMessage())}`}
                target="_blank"
                rel="noopener noreferrer"
                className="flex-1 bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg font-medium transition-colors text-center"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp
              </a>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <div className="flex justify-between mt-8">
          {currentStep > 1 && (
            <button
              onClick={handlePrevStep}
              className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50"
            >
              –ù–∞–∑–∞–¥
            </button>
          )}
          
          {currentStep < 3 && (
            <button
              onClick={handleNextStep}
              className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 ml-auto"
            >
              –î–∞–ª–µ–µ
            </button>
          )}
        </div>
      </div>
    </div>
  )
}